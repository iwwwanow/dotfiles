$mainMod = SUPER

bind = ,XF86AudioMute, exec, pulsemixer --toggle-mute
bind = ,XF86AudioMicMute, exec, pulsemixer --id source-1 --toggle-mute
binde = ,XF86AudioRaiseVolume, exec, pulsemixer --change-volume +4 --max-volume 100
binde= ,XF86AudioLowerVolume, exec, pulsemixer --change-volume -4

binde = ,XF86MonBrightnessDown, exec, brightnessctl --device=intel_backlight s 8%-
binde = ,XF86MonBrightnessUp, exec, brightnessctl --device=intel_backlight s +8%
bind = ,XF86Display, exec, systemctl suspend

bind = ,XF86Tools, exec, kitty nvim ~/dotfiles 
bind = ,XF86Keyboard, exec, kitty calc
bind = ,XF86Favorites, exec, kitty nvim -R ~/library/obsidian/master

bind = $mainMod, RETURN, exec, kitty
bind = $mainMod, F, fullscreen
#bind = $mainMod, D, exec, [workspace m+1] kitty
bind = $mainMod, C, killactive, 
bind = $mainMod, M, exit, 
# bind = $mainMod, E, exec, pcmanfm
bind = $mainMod, E, exec, kitty yazi
bind = $mainMod, T, exec, pkill taskwarrior-tui && kitty taskwarrior-tui || kitty taskwarrior-tui
bind = $mainMod, R, exec, pkill tofi || tofi-drun --drun-launch=true
bind = $mainMod, P, exec, passmenu

bind = $mainMod, D, exec, darkman toggle

# MOUSE
bindm=$mainMod, mouse:272, movewindow
bindm=$mainMod_ALT, mouse:272, resizewindow

# slurp
$slurpSelectRegion = slurp
$slurpSelectWindow = ~/.config/hypr/scripts/slurpSelectWindow.sh
$slurpSelectMonitor = slurp -o -f "%o"

# screenshot
# window
bind = , PRINT, exec, hyprshot -m window 
# region
bind = SHIFT, PRINT, exec, hyprshot -m region
# monitor
bind = CTRL, PRINT, exec, hyprshot -m output
# all monitors
bind = ALT, PRINT, exec, grim $(xdg-user-dir PICTURES)/$(date +'%s_grim.png') | notify-send "all screens screenshot saved" -t 5000

# screencast screenrecord
$screencastFilePath = ~/library/Videos/screencast/$(date +'%F%s.mkv')

# window
$screencastWindowNotification = notify-send "window screencast ended" -i 1 -t 5000
$screencastWindowCommand = wf-recorder -f $screencastFilePath -g "$($slurpSelectWindow)" && $screencastWindowNotification
bind = $mainMod, PRINT, exec, $screencastWindowCommand

# region
$screencastRegionNotification = notify-send "region screencast ended" -i 1 -t 5000
$screencastRegionCommand = wf-recorder -f $screencastFilePath -g "$($slurpSelectRegion)"  && $screencastRegionNotification
bind = $mainMod+SHIFT, PRINT, exec, $screencastRegionCommand

# monitor
$screencastMonitorNotification = notify-send "monitor screencast ended" -i 1 -t 5000
$screencastMonitorCommand = wf-recorder -f $screencastFilePath -o "$($slurpSelectMonitor)"  && $screencastMonitorNotification
bind = $mainMod+CTRL, PRINT, exec, $screencastMonitorCommand

bind = $mainMod+ALT, PRINT, exec, notify-send "all monitor screencast not setup" -i 1 -t 5000

bind = $mainMod, TAB, focusmonitor, +1

bind = $mainMod, h, movefocus, l
bind = $mainMod, l, movefocus, r
bind = $mainMod, k, movefocus, u
bind = $mainMod, j, movefocus, d

bind = $mainMod_CTRL, h, workspace, r-1
bind = $mainMod_CTRL, l, workspace, r+1
bind = $mainMod_CTRL, k, focusmonitor, +1
bind = $mainMod_CTRL, j, focusmonitor, -1

bind = $mainMod_ALT, h, resizeactive, -64 0 
bind = $mainMod_ALT, l, resizeactive, 64 0
bind = $mainMod_ALT, k, resizeactive, 0 -64
bind = $mainMod_ALT, j, resizeactive, 0 64

bind = $mainMod_SHIFT, h, movewindow, l
bind = $mainMod_SHIFT, l, movewindow, r
bind = $mainMod_SHIFT, j, movewindow, d
bind = $mainMod_SHIFT, k, movewindow, u

bind = $mainMod_SHIFT_CTRL, h, movetoworkspace, r-1
bind = $mainMod_SHIFT_CTRL, l, movetoworkspace, r+1
bind = $mainMod_SHIFT_CTRL, j, movewindow, mon:-1
bind = $mainMod_SHIFT_CTRL, k, movewindow, mon:+1
